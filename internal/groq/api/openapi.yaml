openapi: 3.0.0
info:
  description: API for interacting with Groq's language models and audio transcription/translation
    services
  title: Groq API
  version: 1.0.0
servers:
- url: https://api.groq.com/openai/v1
paths:
  /chat/completions:
    post:
      description: Creates a model response for the given chat conversation.
      operationId: createChatCompletion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
          description: Successful response
      summary: Create chat completion
      tags:
      - Chat
  /audio/transcriptions:
    post:
      description: Transcribes audio into the input language.
      operationId: createTranscription
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TranscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionResponse'
          description: Successful response
      summary: Create transcription
      tags:
      - Audio
  /audio/translations:
    post:
      description: Translates audio into English.
      operationId: createTranslation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TranslationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
          description: Successful response
      summary: Create translation
      tags:
      - Audio
  /models:
    get:
      description: List available models
      operationId: listModels
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'
          description: Successful response
      summary: List models
      tags:
      - Models
  /models/{model}:
    get:
      description: Get details of a specific model
      operationId: retrieveModel
      parameters:
      - explode: false
        in: path
        name: model
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Successful response
      summary: Retrieve model
      tags:
      - Models
components:
  schemas:
    ChatCompletionRequest:
      example:
        logit_bias: "{}"
        functions:
        - "{}"
        - "{}"
        function_call: ChatCompletionRequest_function_call
        max_tokens: 6
        presence_penalty: 5.962133916683182
        "n": 1
        top_p: 2.3021358869347655
        frequency_penalty: 0.8008281904610115
        stop: ChatCompletionRequest_stop
        stream: false
        temperature: 5.637376656633329
        messages:
        - role: system
          content: content
        - role: system
          content: content
        model: model
        user: user
      properties:
        messages:
          items:
            $ref: '#/components/schemas/ChatMessage'
          type: array
        model:
          type: string
        frequency_penalty:
          default: 0
          nullable: true
          type: number
        function_call:
          $ref: '#/components/schemas/ChatCompletionRequest_function_call'
        functions:
          items:
            type: object
          nullable: true
          type: array
        logit_bias:
          nullable: true
          type: object
        max_tokens:
          nullable: true
          type: integer
        "n":
          default: 1
          nullable: true
          type: integer
        presence_penalty:
          default: 0
          nullable: true
          type: number
        stop:
          $ref: '#/components/schemas/ChatCompletionRequest_stop'
        stream:
          default: false
          nullable: true
          type: boolean
        temperature:
          default: 1
          nullable: true
          type: number
        top_p:
          default: 1
          nullable: true
          type: number
        user:
          nullable: true
          type: string
      required:
      - messages
      - model
      type: object
    ChatMessage:
      example:
        role: system
        content: content
      properties:
        role:
          enum:
          - system
          - user
          - assistant
          type: string
        content:
          type: string
      required:
      - content
      - role
      type: object
    ChatCompletionResponse:
      example:
        created: 0
        usage:
          completion_tokens: 5
          prompt_tokens: 1
          total_tokens: 5
        model: model
        id: id
        choices:
        - finish_reason: finish_reason
          index: 6
          message:
            role: system
            content: content
        - finish_reason: finish_reason
          index: 6
          message:
            role: system
            content: content
        object: object
      properties:
        id:
          type: string
        object:
          type: string
        created:
          type: integer
        model:
          type: string
        choices:
          items:
            $ref: '#/components/schemas/ChatCompletionChoice'
          type: array
        usage:
          $ref: '#/components/schemas/Usage'
      type: object
    ChatCompletionChoice:
      example:
        finish_reason: finish_reason
        index: 6
        message:
          role: system
          content: content
      properties:
        index:
          type: integer
        message:
          $ref: '#/components/schemas/ChatMessage'
        finish_reason:
          type: string
      type: object
    Usage:
      example:
        completion_tokens: 5
        prompt_tokens: 1
        total_tokens: 5
      properties:
        prompt_tokens:
          type: integer
        completion_tokens:
          type: integer
        total_tokens:
          type: integer
      type: object
    TranscriptionRequest:
      properties:
        file:
          format: binary
          type: string
        model:
          type: string
        language:
          type: string
        prompt:
          type: string
        response_format:
          default: json
          enum:
          - json
          - text
          - verbose_json
          type: string
        temperature:
          default: 0
          type: number
      required:
      - file
      - model
      type: object
    TranscriptionResponse:
      example:
        text: text
      properties:
        text:
          type: string
      type: object
    TranslationRequest:
      properties:
        file:
          format: binary
          type: string
        model:
          type: string
        prompt:
          type: string
        response_format:
          default: json
          enum:
          - json
          - text
          - verbose_json
          type: string
        temperature:
          default: 0
          type: number
      required:
      - file
      - model
      type: object
    TranslationResponse:
      example:
        text: text
      properties:
        text:
          type: string
      type: object
    ModelList:
      example:
        data:
        - created: 0
          active: true
          owned_by: owned_by
          id: id
          context_window: 6
          object: object
        - created: 0
          active: true
          owned_by: owned_by
          id: id
          context_window: 6
          object: object
        object: object
      properties:
        object:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Model'
          type: array
      type: object
    Model:
      example:
        created: 0
        active: true
        owned_by: owned_by
        id: id
        context_window: 6
        object: object
      properties:
        id:
          type: string
        object:
          type: string
        created:
          type: integer
        owned_by:
          type: string
        active:
          type: boolean
        context_window:
          type: integer
      type: object
    ChatCompletionRequest_function_call:
      nullable: true
      oneOf:
      - type: string
      - type: object
    ChatCompletionRequest_stop:
      nullable: true
      oneOf:
      - type: string
      - items:
          type: string
        type: array
